//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicamentoCLS", Namespace="http://schemas.datacontract.org/2004/07/ServiciosMedicamentos.Clases")]
    [System.SerializableAttribute()]
    public partial class MedicamentoCLS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IidMedicamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConcentracionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IidFormaFarmaceuticaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreFormaFarmaceuticaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrecioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BHabilitadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IidMedicamento {
            get {
                return this.IidMedicamentoField;
            }
            set {
                if ((this.IidMedicamentoField.Equals(value) != true)) {
                    this.IidMedicamentoField = value;
                    this.RaisePropertyChanged("IidMedicamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Concentracion {
            get {
                return this.ConcentracionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConcentracionField, value) != true)) {
                    this.ConcentracionField = value;
                    this.RaisePropertyChanged("Concentracion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int IidFormaFarmaceutica {
            get {
                return this.IidFormaFarmaceuticaField;
            }
            set {
                if ((this.IidFormaFarmaceuticaField.Equals(value) != true)) {
                    this.IidFormaFarmaceuticaField = value;
                    this.RaisePropertyChanged("IidFormaFarmaceutica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string NombreFormaFarmaceutica {
            get {
                return this.NombreFormaFarmaceuticaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreFormaFarmaceuticaField, value) != true)) {
                    this.NombreFormaFarmaceuticaField = value;
                    this.RaisePropertyChanged("NombreFormaFarmaceutica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public decimal Precio {
            get {
                return this.PrecioField;
            }
            set {
                if ((this.PrecioField.Equals(value) != true)) {
                    this.PrecioField = value;
                    this.RaisePropertyChanged("Precio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Presentacion {
            get {
                return this.PresentacionField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentacionField, value) != true)) {
                    this.PresentacionField = value;
                    this.RaisePropertyChanged("Presentacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int BHabilitado {
            get {
                return this.BHabilitadoField;
            }
            set {
                if ((this.BHabilitadoField.Equals(value) != true)) {
                    this.BHabilitadoField = value;
                    this.RaisePropertyChanged("BHabilitado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormaFarmaceuticaCLS", Namespace="http://schemas.datacontract.org/2004/07/ServiciosMedicamentos.Clases")]
    [System.SerializableAttribute()]
    public partial class FormaFarmaceuticaCLS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IidFormaFarmaceuticaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreFormaFarmaceuticaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IidFormaFarmaceutica {
            get {
                return this.IidFormaFarmaceuticaField;
            }
            set {
                if ((this.IidFormaFarmaceuticaField.Equals(value) != true)) {
                    this.IidFormaFarmaceuticaField = value;
                    this.RaisePropertyChanged("IidFormaFarmaceutica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreFormaFarmaceutica {
            get {
                return this.NombreFormaFarmaceuticaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreFormaFarmaceuticaField, value) != true)) {
                    this.NombreFormaFarmaceuticaField = value;
                    this.RaisePropertyChanged("NombreFormaFarmaceutica");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMedicamento.IMedicamentos")]
    public interface IMedicamentos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/ListarMedicamentos", ReplyAction="http://tempuri.org/IMedicamentos/ListarMedicamentosResponse")]
        System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS> ListarMedicamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/ListarMedicamentos", ReplyAction="http://tempuri.org/IMedicamentos/ListarMedicamentosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS>> ListarMedicamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/ListaFormaFarmaceutica", ReplyAction="http://tempuri.org/IMedicamentos/ListaFormaFarmaceuticaResponse")]
        System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.FormaFarmaceuticaCLS> ListaFormaFarmaceutica();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/ListaFormaFarmaceutica", ReplyAction="http://tempuri.org/IMedicamentos/ListaFormaFarmaceuticaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.FormaFarmaceuticaCLS>> ListaFormaFarmaceuticaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/RecuperarMedicamento", ReplyAction="http://tempuri.org/IMedicamentos/RecuperarMedicamentoResponse")]
        MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS RecuperarMedicamento(int iidMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/RecuperarMedicamento", ReplyAction="http://tempuri.org/IMedicamentos/RecuperarMedicamentoResponse")]
        System.Threading.Tasks.Task<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS> RecuperarMedicamentoAsync(int iidMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/RegistraryActualizarMedicamento", ReplyAction="http://tempuri.org/IMedicamentos/RegistraryActualizarMedicamentoResponse")]
        int RegistraryActualizarMedicamento(MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS oMedicamentoCLS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/RegistraryActualizarMedicamento", ReplyAction="http://tempuri.org/IMedicamentos/RegistraryActualizarMedicamentoResponse")]
        System.Threading.Tasks.Task<int> RegistraryActualizarMedicamentoAsync(MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS oMedicamentoCLS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/EliminarMedicamento", ReplyAction="http://tempuri.org/IMedicamentos/EliminarMedicamentoResponse")]
        int EliminarMedicamento(int iidMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicamentos/EliminarMedicamento", ReplyAction="http://tempuri.org/IMedicamentos/EliminarMedicamentoResponse")]
        System.Threading.Tasks.Task<int> EliminarMedicamentoAsync(int iidMedicamento);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicamentosChannel : MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.IMedicamentos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicamentosClient : System.ServiceModel.ClientBase<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.IMedicamentos>, MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.IMedicamentos {
        
        public MedicamentosClient() {
        }
        
        public MedicamentosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicamentosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicamentosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicamentosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS> ListarMedicamentos() {
            return base.Channel.ListarMedicamentos();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS>> ListarMedicamentosAsync() {
            return base.Channel.ListarMedicamentosAsync();
        }
        
        public System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.FormaFarmaceuticaCLS> ListaFormaFarmaceutica() {
            return base.Channel.ListaFormaFarmaceutica();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.FormaFarmaceuticaCLS>> ListaFormaFarmaceuticaAsync() {
            return base.Channel.ListaFormaFarmaceuticaAsync();
        }
        
        public MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS RecuperarMedicamento(int iidMedicamento) {
            return base.Channel.RecuperarMedicamento(iidMedicamento);
        }
        
        public System.Threading.Tasks.Task<MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS> RecuperarMedicamentoAsync(int iidMedicamento) {
            return base.Channel.RecuperarMedicamentoAsync(iidMedicamento);
        }
        
        public int RegistraryActualizarMedicamento(MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS oMedicamentoCLS) {
            return base.Channel.RegistraryActualizarMedicamento(oMedicamentoCLS);
        }
        
        public System.Threading.Tasks.Task<int> RegistraryActualizarMedicamentoAsync(MiSegundoServicioWCFConsumidoEnWindows.ServiceMedicamento.MedicamentoCLS oMedicamentoCLS) {
            return base.Channel.RegistraryActualizarMedicamentoAsync(oMedicamentoCLS);
        }
        
        public int EliminarMedicamento(int iidMedicamento) {
            return base.Channel.EliminarMedicamento(iidMedicamento);
        }
        
        public System.Threading.Tasks.Task<int> EliminarMedicamentoAsync(int iidMedicamento) {
            return base.Channel.EliminarMedicamentoAsync(iidMedicamento);
        }
    }
}
